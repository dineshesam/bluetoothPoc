name: Build Android & iOS

on:
  push:
    branches:
      - main  # Runs on push to main branch
  workflow_dispatch:  # Allows manual trigger

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Node.js & Dependencies
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Install Android SDK
        run: |
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O sdk-tools.zip
          unzip sdk-tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
          rm sdk-tools.zip
          mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/emulator:$PATH"
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses || true
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      - name: Generate local.properties
        run: echo "sdk.dir=$ANDROID_SDK_ROOT" > android/local.properties

      - name: Build Android APK
        run: |
          cd android
          chmod +x gradlew
          ./gradlew clean
          ./gradlew assembleRelease --stacktrace

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-app
          path: android/app/build/outputs/apk/release/app-release.apk

  build-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Install CocoaPods
        run: |
          cd ios
          pod install
          cd ..

      - name: Build iOS App
        run: |
          xcodebuild -workspace ios/MyApp.xcworkspace \
                     -scheme MyApp \
                     -sdk iphoneos \
                     -configuration Release \
                     -derivedDataPath ios/build \
                     -allowProvisioningUpdates

      - name: Package iOS App (.ipa)
        run: |
          mkdir -p ios/build/ipa
          xcodebuild -exportArchive \
                     -archivePath ios/build/MyApp.xcarchive \
                     -exportPath ios/build/ipa \
                     -exportOptionsPlist ios/exportOptions.plist \
                     -allowProvisioningUpdates

      - name: Upload iOS .ipa
        uses: actions/upload-artifact@v4
        with:
          name: ios-app
          path: ios/build/ipa/*.ipa
